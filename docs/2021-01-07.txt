Today i have started learning the actual workflow while working with git and github
===================================================================================

- first you need to move in your project folder or working directory which you want to make as 
repositpory in github

- when you perform any operation like adding or removing commang then your file moved in the staging
area..

-following are some stages..
	
	-- working directory
	-- staging area(after performing commands like add and rm)
	-- repository(after commits your changes)

for practice some commands i have created one folder inside that..

	-- create 4 files(index.js,index.php,index.css)

after that i am adding this files in staging area 

	-- git add .

when i perform rm operation on it with -f option it will delete my file from all the stages..

	-- git rm -f index.js

after that i learn new command which is used to untracked the tracked file..
	
	-- git rm --cached index.css

so it'll not remove from the system it only removed from the staging area.

i have learn some commit commands within it i have done checkout, reset and revert commands..

Revert command is used to get back changes..
 for example i have change in mytext.txt file and i save that file using "git add mytext.txt"
 

and commit it using "git commit -m 'some changes in mytext file'".. after timepasses i think that i made 
mistake on that file so i have used revert operation 

when you commit any changed it will generate some code.. if you want to use revert you have to use that code 
with that command..

	git revert '<code Which Generate From Commit>(use that commit code in which file you want your code back)'
	
	-- git revert b0085f8c76ff40c59b92ea3a0cc7599c6b11970d


learn that how to work with .gitignore file

	-if you have a large filestructre for example working with javascript where your project has "node_module"
 	folder which takes lots of time and storage.. so if you want to ignore that folder you have to 
	mention it in .gitignore file..

steps:
======

1. create the file named .gitignore
	
2. open it mention all the files and folder which you dont want to commit 

3. after that if you change the content of any file is not reflected while we using any add or rm operation
   with it.. 


squash commit
